{"version":3,"sources":["components/Filter.js","components/Person.js","components/PersonForm.js","services/personService.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","Person","props","name","number","PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","updateDB","delete","concat","App","useState","persons","setPersons","useEffect","personService","initialPersons","setNewName","setNewNumber","setFilter","alertMessage","setAlertMessage","failed","setFailed","message","className","event","target","preventDefault","personObject","nimi","forEach","item","itemId","window","confirm","catch","e","setTimeout","Boolean","returnedPersons","map","person","i","toLowerCase","includes","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eee41968.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handleFilter}) => {\n\n    return (\n        <div>\n          filter shown with <input value={filter} onChange={handleFilter}/>\n        </div>\n      )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = (props) => {\n  return(\n<li>{props.name} {props.number}</li>\n  )\n}\n\n\nexport default Person","import React from 'react'\n\nconst PersonForm = ( {addPerson, newName, handlePersonChange, newNumber, handleNumberChange} ) => {\n\n  return (\n    <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handlePersonChange}/>\n    </div>\n    <div>\n      number <input value={newNumber} onChange={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\n  \nconst update = (id, name, number) => {\n  const request = axios.put(`${baseUrl}/${id}`,name, number)\n  return request.then(response => response.data)\n}\n  \nconst del = (id, updateDB) => {\n    const request = axios.delete(baseUrl.concat('/', id))\n    return request.then(response => response.data)\n    .then(updateDB)\n}\n\n  export default { \n    getAll: getAll, \n    create: create,\n    update: update,\n    del: del\n  }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/personService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n\n  useEffect(() => {   \n    personService\n    .getAll()    \n    .then(initialPersons => {     \n        setPersons(initialPersons) \n           })\n       }, []) \n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ alertMessage, setAlertMessage] = useState(null)\n  const [ failed, setFailed] = useState(false)\n\n  const Notification = ( { message, failed } ) => {\n    if(message === null) {\n      return null\n    }\n    if(!failed) {\n    return (\n      <div className=\"alert\">\n        {message}\n      </div>\n    )\n    } else {\n      return (\n        <div className=\"alert2\">\n        {message}\n      </div>\n      )\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    \n    }\n    var nimi = \"\"\n    persons.forEach(function(item) {\n        if(item.name === newName) {\n          var itemId = item.id\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          personService.update(itemId, {name: newName, number: newNumber}).then(updateDB).catch(e => {\n            setFailed(true)\n            setAlertMessage(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => {\n              setAlertMessage(null)}, 2000)\n          })\n          setFailed(false)\n          setAlertMessage(`${newName} updated!`)\n          setTimeout(() => {\n            setAlertMessage(null)}, 2000)\n            nimi = item.name\n        } else {\n          nimi = item.name\n        }\n     nimi = item.name\n    }\n  } )\n\n    if(!Boolean(nimi)) {\n    personService\n    .create(personObject)\n    .then(returnedPersons => {\n      setPersons(persons.concat(returnedPersons))\n      setNewName('')\n      setNewNumber('')\n    })\n    setFailed(false)\n    setAlertMessage(`${newName} added!`)\n    setTimeout(() => {\n      setAlertMessage(null)}, 2000)\n    \n  }\n}\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const updateDB = () => {\n    personService\n    .getAll()\n    .then(response => {\n      setPersons(response)\n    })\n  \n  }\n\n  function deleteFromDB(props)  {\n    if (window.confirm('Delete ' + props.name + '?')) {\n      personService.del(props.id, updateDB)\n      setFailed(false)\n      setAlertMessage(`${props.name} deleted!`)\n      setTimeout(() => {\n      setAlertMessage(null)}, 2000)\n  }\n}\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={alertMessage} failed={failed}/>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} handlePersonChange={handlePersonChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      {persons.map((person, i) => {\n      if(person.name.toLowerCase().includes(filter.toLowerCase())) {\n        return (\n          <div key={i}>\n      <Person key={person.name} name={person.name} number={person.number} /> \n      <p><button key={i} type=\"button\" onClick={() =>  deleteFromDB(person)}>delete</button></p>\n      </div>\n        )\n      } else {\n        return (\"\")\n\n        }\n      })}\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}